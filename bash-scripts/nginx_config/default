
server {

    server_name sub.example.com www.sub.example.rs;
  
    index index.php index.html;

    location / {
####        alias /home/exampleuser/example;
#        if ($request_method = 'OPTIONS')
#        {
#            add_header 'Access-Control-Allow-Origin' '*';
#            add_header 'Access-Control-Allow-Methods' 'GET, DELETE, PUT, POST, OPTIONS';
    
    # Custom headers and headers various browsers *should* be OK with but aren't
    #
#           add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    #
    # Tell client that this pre-flight info is valid for 20 days
    #
#            add_header 'Access-Control-Max-Age' 1728000;
#            add_header 'Content-Type' 'application/json; charset=utf-8';
#            add_header 'Content-Length' 0; add_header 'X-Frame-Options' 'DENY'; add_header 'X-Content-Type-Options' 'nosniff';
#            add_header 'X-Robots-Tag' 'nofollow, nosnippet, noarchive';
#            add_header 'X-XSS-Protection' '1; mode=block';
#            add_header 'Content-Security-Policy' "default-src 'self' 'unsafe-inline' data: blob: https://ajax.googleapis.com https://maxcdn.bootstrapcdn.com https://maxcdn.bootstrapcdn.com https://maxcdn.bootstrapcdn.com https://npmcdn.com;";
#            return 204;
#        }
#        if ($request_method = 'POST') { 
#            add_header 'Access-Control-Allow-Origin' '*';
#            add_header 'Access-Control-Allow-Methods' 'GET, DELETE, PUT, POST, OPTIONS';
#            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#            add_header 'X-Frame-Options' 'DENY';
#            add_header 'X-Content-Type-Options' 'nosniff';
#            add_header 'X-Robots-Tag' 'nofollow, nosnippet, noarchive';
#            add_header 'X-XSS-Protection' '1; mode=block';
#            add_header 'Content-Security-Policy' "default-src 'self' 'unsafe-inline' data: blob: https://ajax.googleapis.com https://maxcdn.bootstrapcdn.com https://maxcdn.bootstrapcdn.com https://maxcdn.bootstrapcdn.com https://npmcdn.com;";
 #       }
        
 #       if ($request_method = 'GET')
 #       {
 #           add_header 'Access-Control-Allow-Origin' '*';
 #           add_header 'Access-Control-Allow-Methods' 'GET, DELETE, PUT, POST, OPTIONS';
#            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#            add_header 'X-Frame-Options' 'DENY';
#            add_header 'X-Content-Type-Options' 'nosniff';
#            add_header 'X-Robots-Tag' 'nofollow, nosnippet, noarchive';
#            add_header 'X-XSS-Protection' '1; mode=block';
#            add_header 'Content-Security-Policy' "default-src 'self' 'unsafe-inline' data: blob: https://ajax.googleapis.com https://maxcdn.bootstrapcdn.com https://maxcdn.bootstrapcdn.com https://maxcdn.bootstrapcdn.com https://npmcdn.com;";
#        }
    
 #       proxy_pass http://127.0.0.1:3000;
 #       proxy_http_version 1.1;
 #       proxy_cache_bypass $http_upgrade
 #       proxy_pass_header Authorization;
 #       proxy_set_header upgrade $http_upgrade;
 #       proxy_set_header Connection 'upgrade';
 #       proxy_set_header Host $host;
 #       proxy_set_header X-Forwarded-Host $http_host;
 #       proxy_set_header X-Real-IP $remote_addr; # pass on real client's IP
 #       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 #       proxy_set_header X-Forwarded-Proto $scheme;
 #   # proxy_set_header X-XSRF-TOKEN $cookie_xsrf_token; proxy_set_header Authorization $http_authorization;
 #       proxy_read_timeout 900;
    }
	
    client_max_body_size 100M;
    

        listen [::]:443 ssl http2 ipv6only=on;
        listen 443 ssl http2;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 ;


    location ~ /\.ht {
        deny all;
    }

}

server {
    if ($host = sub.example.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = www.sub.example.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    listen 80;

    server_name sub.example.com www.sub.example.com;
    return 404; # managed by Certbot


}
